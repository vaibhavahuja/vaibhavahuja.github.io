<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vaibhav Ahuja</title>
    <description>my personal space where i write about stuff that excites me.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 21 Jan 2021 15:37:55 +0530</pubDate>
    <lastBuildDate>Thu, 21 Jan 2021 15:37:55 +0530</lastBuildDate>
    <generator>Jekyll v3.8.6</generator>
    
      <item>
        <title>Controlling home lamp using internet</title>
        <description>&lt;p&gt;As I was browsing through Amazon, searching for things to buy which I do not need I came across this lamp which could be controlled through the internet. It was quite expensive so I thought of building my own. The way the lamp worked was that, it came with a QR code on top of it, and when scanned with the phone &lt;em&gt;(which is connected with a wi-fi)&lt;/em&gt;, the lamp gets connected and if both the devices are connected to the same wifi, we could control the lamp. That however is an issue since I wish to control my lamp from anywhere and not just from my room.&lt;/p&gt;

&lt;p&gt;I searched for options to do that for my existing table lamp, and I came across a &lt;a href=&quot;https://www.amazon.in/dp/B07V39T8F2/ref=sspa_dk_detail_2?psc=1&amp;amp;pd_rd_i=B07V39T8F2&amp;amp;pd_rd_w=ksLDx&amp;amp;pf_rd_p=30249bab-abdf-42ed-928f-d8929403a9aa&amp;amp;pd_rd_wg=3Yquo&amp;amp;pf_rd_r=QZMZ3PDK3KPPQGQ5MN3B&amp;amp;pd_rd_r=4132d55b-85f2-4e2b-b64e-dd918ec6cd21&amp;amp;spLa=ZW5jcnlwdGVkUXVhbGlmaWVyPUEzSFRVQktEQVE0QkNaJmVuY3J5cHRlZElkPUEwOTk3NDUzNkdJWUpBV1AzOE4zJmVuY3J5cHRlZEFkSWQ9QTA2MjA4Mjc1VE4zT1U2MUgxNTImd2lkZ2V0TmFtZT1zcF9kZXRhaWwmYWN0aW9uPWNsaWNrUmVkaXJlY3QmZG9Ob3RMb2dDbGljaz10cnVl&quot;&gt;smart plug&lt;/a&gt; which could literally make any of the appliances “smart”. This would have costed around ₹2000, and I decided to create my own “smart” plug.&lt;/p&gt;

&lt;p&gt;The idea was simple, I just needed a web server where I would store the state of the switch, something that would poll my server all the time and would turn the lamp on/off according to the state. I thought of using Arduino and some wifi module, but I came across &lt;a href=&quot;https://components101.com/sites/default/files/component_datasheet/ESP8266-NodeMCU-Datasheet.pdf&quot;&gt;ESP8266-NodeMCU&lt;/a&gt;, which is again a microcontroller but it comes fitted with embedded WiFi capabilities, with the lowest costs. These chips are developed in China, and you can get one for as low as ₹200. It has an operating voltage of 3.0-3.6V and the package size was pretty small, so it could be fitted in my existing switch boards. This comes with 17 GPIO pins, and even one was enough for my POC. The GPIO pins give out the signal which can be low or high depending on the code. If I could just poll the web server, and get the state, and send out the signal through the GPIO pin, the lamp could be turned on or off. Now ofcourse, the GPIO pin would give a high signal of 3V DC, and the appliances run on 230 V AC. I used a relay for this purpose. A Relay is basically an electromechanical device that can be used to make or break an electrical connection. It consists of a flexible moving mechanical part which can be controlled electronically through an electromagnet, basically, a relay is just like a mechanical switch but you can control it with an electronic signal instead of manually turning it on or off. So it served the purpose.
I sketched out the architecture, before actually starting with the coding part of what I was about to built and it looked something like this.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;img src=&quot;/images/homeautodiag.png?raw=true&quot; alt=&quot;architecture&quot; /&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now, that everything was in place, I ordered a nodeMCU ESP8266, a relay, some jumper wires, and that is it.
I used the arduino IDE itself for programming the nodeMCU. Luckily, tons of libraries exist for running nodeMCU using the arduino IDE. Parallely I created an API with two endpoints. The &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt; request would be used by the microcontroller to get the state of the switch, and the &lt;code class=&quot;highlighter-rouge&quot;&gt;PATCH&lt;/code&gt; request, will toggle the state -&amp;gt;  &lt;code class=&quot;highlighter-rouge&quot;&gt;state = 1 - state&lt;/code&gt;. I had connected a free MongoDB database with just one entry, and hosted the API on a free (&lt;em&gt;making it low cost :P&lt;/em&gt;) server by Heroku. 
I also gave a neat UI which would send a patch reuest for toggling the state, and hosted it on github pages. &lt;a href=&quot;https://vaibhavahuja.github.io/homeautoui/&quot;&gt;Here is the UI&lt;/a&gt;. Tapping on the button would turn the lamp in my room on/off.&lt;/p&gt;

&lt;p&gt;Below is the code for the setup method.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;  &lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;WiFi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WIFI_OFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;        &lt;span class=&quot;c1&quot;&gt;//Prevents reconnection issue (taking too long to connect)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;WiFi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WIFI_STA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;        
  &lt;span class=&quot;n&quot;&gt;WiFi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;begin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   

  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Connecting&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Waiting for connection&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WiFi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WL_CONNECTED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//If connection successful show IP address in serial monitor&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Connected to &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;IP address: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;WiFi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;localIP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//IP address assigned to your ESP&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now that the wifi is connected and the pins are in place, coming to the loop method.&lt;/p&gt;

&lt;p&gt;The below code sends a &lt;code class=&quot;highlighter-rouge&quot;&gt;GET&lt;/code&gt; request to the server and stores the output in the line variable.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;httpsClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;GET &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Link&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; HTTP/1.1&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;
               &lt;span class=&quot;s&quot;&gt;&quot;Host: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;               
               &lt;span class=&quot;s&quot;&gt;&quot;Connection: close&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r\n\r\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;request sent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                  
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;httpsClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpsClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readStringUntil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\r&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;headers received&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There was no need to actually use a json parser since the server would just return a single line with the status. Finally, on checking the output received, a low signal was sent to the Relay to turn on the lamp and a high signal to turn off the lamp.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;httpsClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;available&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()){&lt;/span&gt;        
    &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;httpsClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;readStringUntil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sc&quot;&gt;'\n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Serial&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; 
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vaibhavahuja/homeAuto&quot;&gt;You can view the code for the server here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;So I was able to complete this home auto project within a fraction of what I would get online.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Jan 2021 05:30:00 +0530</pubDate>
        <link>http://localhost:4000/iot/homeAutomation</link>
        <guid isPermaLink="true">http://localhost:4000/iot/homeAutomation</guid>
        
        <category>iot</category>
        
        
        <category>iot</category>
        
      </item>
    
      <item>
        <title>Effective Testing Strategy for preventing Community Spread of COVID-19</title>
        <description>&lt;h3 id=&quot;problem-statement&quot;&gt;Problem Statement&lt;/h3&gt;

&lt;p&gt;In India, when the country got exposed to COVID-19, we had very limited testing kits and with such a huge population, whom to test and whom not to became a serious challenge. The testing strategy followed at that time, was based on a person’s travel history, if they were showing symptoms or not and so on. The fact that a healthy asymptomatic human being can be a &lt;strong&gt;carrier for the virus&lt;/strong&gt; was ignored, and we were unable to control the Community Spread which led to a huge surge in the number of cases. The question arises on &lt;strong&gt;whom to test and whom not to when the country has limited testing available.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;proposed-solution&quot;&gt;Proposed Solution&lt;/h3&gt;

&lt;p&gt;There are no such apps which talk about effective testing, however there are a few applications which were used by the Government for Contact Tracing, like Aarogya Setu. The way aarogya setu worked was that it used the bluetooth technology in order to find the covid infected people near one person. When two people with their smartphones interact, a secure digital signature is exchanged through which it is determined if a person has contacted someone with COVID or not.
Our application defines a testing strategy for the government based on the concept of Betweenness Centrality. The shortcomings of the bluetooth based solution were that it ignored the fact that a human being with no symptoms can also be a carrier of the Virus, which we have considered. &lt;em&gt;We made a complete web application, but in this post I will only be talking about how we structured the database, and how we achieved the task. I will also be listing down the queries.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We have used Graph Databases for this task, where every person and location will be a node and all the nodes will be connected (according to their interactions). We will also be making connections between two people if they visited a place on the same day. To contain spread, we will be using the concept of articulation points and Centrality Measures. I will be talking in detail about which centrality measure will we use and why.&lt;/p&gt;

&lt;p&gt;Graph databases effectively store data relationships; they’re also flexible when expanding a data model and graph really shines in around relationship analysis, where the connections are between people. For our use case, we have used the &lt;a href=&quot;https://sandbox.neo4j.com/&quot;&gt;neo4j&lt;/a&gt; database.&lt;/p&gt;

&lt;p&gt;The initial part was to load the data into the graph databases, and initialize the nodes and define the relationships between different nodes.&lt;/p&gt;

&lt;p&gt;The first type of node was the Person node, which would define the information about a person. We made separate CSV files, and then loaded the data as follow :&lt;/p&gt;

&lt;p&gt;The information about the Person that we stored was -&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SSN&lt;/li&gt;
  &lt;li&gt;NAME&lt;/li&gt;
  &lt;li&gt;ADDRESS&lt;/li&gt;
  &lt;li&gt;SHOWING SYMPTOMS &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;COVID INFECTED &lt;em&gt;(boolean)&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; 
&lt;span class=&quot;nv&quot;&gt;&quot;https://docs.google.com/spreadsheets/d/e/2PACX-1vTdx9D4Xzrbitz5gDbd-MH7iALAZjYdOpq7Bx6pVAeVEH6_NZC_CQSWC51Tl6ODHkU0WTgSfJshzPUZ/pub?gid=0&amp;amp;single=true&amp;amp;output=csv&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;per&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;per&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SSN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;per&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;per&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;symptoms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;per&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ShowingSymptoms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;infected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;per&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CovidInfected&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Below is a sample node.
&lt;em&gt;We had 150 similar nodes in the database (as per the csv file we used to load)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/sampleNode.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now, to create relationships between people:&lt;/p&gt;

&lt;p&gt;The below csv file just contained information about who meets who, and we create an &lt;code class=&quot;highlighter-rouge&quot;&gt;INTERACTS_WITH&lt;/code&gt; Relationship amongst these people.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; 
&lt;span class=&quot;nv&quot;&gt;&quot;https://docs.google.com/spreadsheets/d/e/2PACX-1vTdx9D4Xzrbitz5gDbd-MH7iALAZjYdOpq7Bx6pVAeVEH6_NZC_CQSWC51Tl6ODHkU0WTgSfJshzPUZ/pub?gid=1511060139&amp;amp;single=true&amp;amp;output=csv&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;meeting&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;meeting&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INTERACTS_WITH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INTERACTS_WITH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We are assigning a cost to every &lt;code class=&quot;highlighter-rouge&quot;&gt;INTERACTS_WITH&lt;/code&gt; relationship, which in the future we might use, as we can increase the cost of relationships with already infected people :&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INTERACTS_WITH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Adding some locations to the database :&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; 
&lt;span class=&quot;nv&quot;&gt;&quot;https://docs.google.com/spreadsheets/d/e/2PACX-1vTdx9D4Xzrbitz5gDbd-MH7iALAZjYdOpq7Bx6pVAeVEH6_NZC_CQSWC51Tl6ODHkU0WTgSfJshzPUZ/pub?gid=2096582175&amp;amp;single=true&amp;amp;output=csv&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;locations&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;Location&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longlat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longlat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;locations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;city&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;City&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;locations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;State&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and making a few people go to some location on some date :&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;load&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;csv&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; 
&lt;span class=&quot;nv&quot;&gt;&quot;https://docs.google.com/spreadsheets/d/e/2PACX-1vTdx9D4Xzrbitz5gDbd-MH7iALAZjYdOpq7Bx6pVAeVEH6_NZC_CQSWC51Tl6ODHkU0WTgSfJshzPUZ/pub?gid=1139166921&amp;amp;single=true&amp;amp;output=csv&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visi&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;Location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PersonSSN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;longlat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PlaceVisitedID&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;vi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VISITS&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;visi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VisitedOn&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We have created the basic relationships and the nodes. One of the feature that we added was to auto create relatonships between two people in case two people visit the same location on the same date. 
This will be more clear in the below example :&lt;/p&gt;

&lt;p&gt;In the below figure, fibonacci visits &lt;code class=&quot;highlighter-rouge&quot;&gt;Mall1&lt;/code&gt; on 30th July and Daniels visits &lt;code class=&quot;highlighter-rouge&quot;&gt;Mall1&lt;/code&gt; on 31st July.&lt;/p&gt;

&lt;p&gt;Say, Bill visits &lt;code class=&quot;highlighter-rouge&quot;&gt;Mall1&lt;/code&gt; on 31st July as well, then an &lt;code class=&quot;highlighter-rouge&quot;&gt;INTERACTS_WITH&lt;/code&gt; relationship should be created between daniels and Bill.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/visitConn1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We do so, because there are high chances that Daniels might have interacted with Bill.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VISITS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;Location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VISITS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INTERACTS_WITH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INTERACTS_WITH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, if we visualize this graph, we can see a new &lt;code class=&quot;highlighter-rouge&quot;&gt;INTERACTS_WITH&lt;/code&gt; relationship has been created between Daniels and Bill :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/visitConn2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After this, our graph db looks something like this :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/covidGraph.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The orange nodes signify the people, and the blue nodes signify the locations. In this dataset, a lot of locations were unvisited.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/covidGraph2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now that the graph is created, with all relationships defined, we come to our solution of Centrality in order to find which People to test first and quarantine.&lt;/p&gt;

&lt;p&gt;We have used the concept of Articulation points and Centrality.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Why Articulation points and Centrality?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In a graph, a vertex is called an articulation point if removing it and all the edges associated with it results in the increase of the number of connected components
Every vertex is a Human Being in our network. We wish to find those articulation points which are the most influential. (most connectivity) Here comes the concept of Betweenness Centrality.
In graph theory and network analysis, indicators of centrality identify the most important vertices within a graph. We can easily find the super spreaders of disease using this.&lt;/p&gt;

&lt;h3 id=&quot;betweenness-centrality&quot;&gt;Betweenness Centrality&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;../images/centrality.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The basic definition is : In graph theory, betweenness centrality is a measure of centrality in a graph based on shortest paths. For every pair of vertices in a connected graph, there exists at least one shortest path between the vertices such that either the number of edges that the path passes through (for unweighted graphs) or the sum of the weights of the edges (for weighted graphs) is minimized. The betweenness centrality for each vertex is the number of these shortest paths that pass through the vertex.&lt;/p&gt;

&lt;p&gt;But in simple terms, it represents the degree to which nodes stand between each other. For example, in a telecommunications network, a node with higher betweenness centrality would have more control over the network, because more information will pass through that node. It tells which node in the graph controls the flow of information in the graph.&lt;/p&gt;

&lt;p&gt;What we are doing here is, we are taking the betweenness centrality and returning the top 10 nodes (Person Nodes) whom should be tested first.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CALL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;betweenness&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;nodeProjection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Person'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	  &lt;span class=&quot;n&quot;&gt;relationshipProjection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
	    &lt;span class=&quot;n&quot;&gt;INTERACTS_WITH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
	      &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'INTERACTS_WITH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	      &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	      &lt;span class=&quot;n&quot;&gt;orientation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'UNDIRECTED'&lt;/span&gt;
	    &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
	  &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;YIELD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nodeId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;centrality&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nodeId&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infected&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'FALSE'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssn&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ssn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;centrality&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;centrality&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The above query will return the information for the first 10 people, whom we should test first.&lt;/p&gt;

&lt;p&gt;Using shortest path, we have also calculated which person to stay away from :&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;MATCH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ssn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;KOAHM4127V&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;TRUE&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CALL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alpha&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shortestPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;nodeProjection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Person'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;relationshipProjection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;INTERACTS_WITH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'INTERACTS_WITH'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;orientation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'UNDIRECTED'&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;startNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;endNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;relationshipWeightProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'cost'&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;YIELD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nodeId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;MATCH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nodeId&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infected&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'TRUE'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;distinct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cost&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;asc&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And, we can get the hostpots of a city :&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;MATCH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;Location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Person&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;infected&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;TRUE&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SIZE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VISITS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;desc&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;limit&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;We were able to manipulate the network of people and the locations in order to find the :&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Most vulnerable people (whom to test) (sorted in order of Betweenness Centrality) -
Effective Testing Strategy can be achieved using our application as it will result us with the list of Individuals along with their address which are the prime suspect and potential carriers for Communal Spread.&lt;/li&gt;
  &lt;li&gt;Most vulnerable locations (as a heatmap) - Corona Heatmap showing all the Most Infected Locations based on our Graph Data plotted on google maps which should be Sealed immediately, and our application users can ignore these Hotspot.&lt;/li&gt;
  &lt;li&gt;Whom to stay away from (calculated on basis of Dijkstras Shortest Path) (sorted in that order) - Provide List of Infected Patients nearby based on the location of logged in user.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 10 Aug 2020 05:30:00 +0530</pubDate>
        <link>http://localhost:4000/project/effectiveTestingCovid</link>
        <guid isPermaLink="true">http://localhost:4000/project/effectiveTestingCovid</guid>
        
        <category>project</category>
        
        
        <category>project</category>
        
      </item>
    
      <item>
        <title>Range Queries</title>
        <description>&lt;p&gt;This post is just for revising range queries. Have highlighted the topics and problems. Might write solutions (my approach) for these problems as well for future reference.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;to do : create collapsible for solutions + also to put the same in DP post&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;table-of-contents-segment-tree&quot;&gt;Table of Contents (segment tree)&lt;/h4&gt;
&lt;p&gt;Link: &lt;a href=&quot;https://cp-algorithms.com/data_structures/segment_tree.html&quot;&gt;cp-algorithms - Segment tree&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Simplest form of a Segment Tree ✔️
    &lt;ul&gt;
      &lt;li&gt;Structure of the Segment Tree ✔️&lt;/li&gt;
      &lt;li&gt;Construction ✔️&lt;/li&gt;
      &lt;li&gt;Sum queries ✔️&lt;/li&gt;
      &lt;li&gt;Update queries ✔️&lt;/li&gt;
      &lt;li&gt;Implementation ✔️&lt;/li&gt;
      &lt;li&gt;Memory efficient implementation ✔️&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Advanced versions of Segment Trees
    &lt;ul&gt;
      &lt;li&gt;More complex queries ✔️&lt;/li&gt;
      &lt;li&gt;Saving the entire subarrays in each vertex ✔️&lt;/li&gt;
      &lt;li&gt;Range updates (Lazy Propagation) ✔️&lt;/li&gt;
      &lt;li&gt;Generalization to higher dimensions 📝&lt;/li&gt;
      &lt;li&gt;Preserving the history of its values (Persistent Segment Tree)&lt;/li&gt;
      &lt;li&gt;Implicit segment tree&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;table-of-contents-fenwick-tree-or-bit&quot;&gt;Table of Contents (fenwick tree or BIT)&lt;/h4&gt;
&lt;p&gt;Link: &lt;a href=&quot;https://cp-algorithms.com/data_structures/fenwick.html&quot;&gt;cp-algorithms - Fenwick tree&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Description
    &lt;ul&gt;
      &lt;li&gt;Overview ✔️&lt;/li&gt;
      &lt;li&gt;Definition of g(i) ✔️&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Implementation
    &lt;ul&gt;
      &lt;li&gt;Finding sum in one-dimensional array ✔️&lt;/li&gt;
      &lt;li&gt;Finding minimum of [0,r] in one-dimensional array ✔️&lt;/li&gt;
      &lt;li&gt;Finding sum in two-dimensional array ✔️&lt;/li&gt;
      &lt;li&gt;One-based indexing approach ✔️&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Range operations
    &lt;ol&gt;
      &lt;li&gt;Point Update and Range Query ✔️&lt;/li&gt;
      &lt;li&gt;Range Update and Point Query 📝&lt;/li&gt;
      &lt;li&gt;Range Updates and Range Queries 📝&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h6 id=&quot;csesfi-problemset-range-queries&quot;&gt;CSES.fi problemSet (Range Queries)&lt;/h6&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://cses.fi/problemset/task/1646&quot;&gt;Range Sum Queries I ✔️&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cses.fi/problemset/task/1646&quot;&gt;Range Sum Queries I ✔️&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cses.fi/problemset/task/1647&quot;&gt;Range Minimum Queries I ✔️&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cses.fi/problemset/task/1648&quot;&gt;Range Sum Queries II ✔️&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cses.fi/problemset/task/1649&quot;&gt;Range Minimum Queries II ✔️&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cses.fi/problemset/task/1650&quot;&gt;Range Xor Queries ✔️&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cses.fi/problemset/task/1651&quot;&gt;Range Update Queries ✔️&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cses.fi/problemset/task/1652&quot;&gt;Forest Queries ✔️&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cses.fi/problemset/task/1143&quot;&gt;Hotel Queries ✔️&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cses.fi/problemset/task/1749&quot;&gt;List Removals ✔️&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cses.fi/problemset/task/1144&quot;&gt;Salary Queries&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cses.fi/problemset/task/1190&quot;&gt;Subarray Sum Queries&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cses.fi/problemset/task/1734&quot;&gt;Distinct Values Queries&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cses.fi/problemset/task/1739&quot;&gt;Forest Queries II&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cses.fi/problemset/task/1735&quot;&gt;Range Updates and Sums&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cses.fi/problemset/task/1736&quot;&gt;Polynomial Queries&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://cses.fi/problemset/task/1737&quot;&gt;Range Queries and Copies&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Mon, 13 Jul 2020 05:30:00 +0530</pubDate>
        <link>http://localhost:4000/algo/rangeQueries</link>
        <guid isPermaLink="true">http://localhost:4000/algo/rangeQueries</guid>
        
        <category>algo</category>
        
        <category>progress</category>
        
        
        <category>algo</category>
        
      </item>
    
      <item>
        <title>Secura - store passwords securely</title>
        <description>&lt;p&gt;This weekend I decided to study more about hashing and thought of creating my own hashing function, which would obviously, hash. Hashing is different from encryption, with encryption you can decrypt the message into the original form, but hashing should be one way, i.e no matter what the output is, it should be irreversible, which makes the problem even harder. I ended up creating my own hashing algorithm, which I was able to crack myself in around 20 minutes or so. I further studied about how dangerous it can be to roll your own hash (yes &lt;em&gt;roll your hash&lt;/em&gt;) if you are not a cryptographic expert so I decided to give up on creating my own hashing algorithm, however I did dig deep on how hashing is used to store passwords.&lt;/p&gt;

&lt;p&gt;Well, of course, good hashing algorithms exist which are one way (SHA-512, SHA-256, and MD5) however they are crackable. By crackable I mean, although the hash itself is irreversible the hackers calculate the hash of tons(^tons) of common words, and compare it with the existing hash. The process is repeated for every possible word, until they match some passwords. That is exactly why when we choose a password, we are asked to choose a long (7+ digits) with special characters, since the more complicated the password is, the more time it will take to brute force it. Ofcourse, even after all these complications, hackers are still able to crack the passwords. There are many different attacks which the hackers use to crack them such as :  &lt;a href=&quot;https://en.wikipedia.org/wiki/Rainbow_table&quot;&gt;Rainbow Table&lt;/a&gt;, Dictionary, Brute Force attacks which poses a great security threat to the users.&lt;/p&gt;

&lt;p&gt;While creating my node app, I found out that it was difficult for me to choose a hashing algorithm which is secure for storing my passwords, and understanding about cryptography took a lot of time. I believe that it should not be necessary for someone to be a cryptographic expert to hash their passwords securely, hence I created a library : &lt;a href=&quot;https://www.npmjs.com/package/secura&quot;&gt;Secura&lt;/a&gt; which one can use to hash the passwords securely and compare the asynchronous way. This module returns a promise with the hashed password and also compares it.&lt;/p&gt;

&lt;p&gt;Below I have described the usage :&lt;/p&gt;

&lt;h3 id=&quot;usage&quot;&gt;Usage&lt;/h3&gt;

&lt;p&gt;Install the module :&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;npm &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;secura
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Usage is very simple and straightforward. You can import the module using :&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;secura&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;secura&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Generate Password&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This converts the user password to a secure hash.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;secura&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;generatePassword&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;//store the hash in the database&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Verify Password&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This verifies if the password entered by the user matches the hashed password stored in the database.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;secura&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;validatePassword&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isMatch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;c1&quot;&gt;//returns true if password matches and false otherwise&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;features&quot;&gt;Features&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Simple and straightforward to use. No knowledge of cryptography required to hash passwords and compare.&lt;/li&gt;
  &lt;li&gt;Every hashed password is 61 digits long.&lt;/li&gt;
  &lt;li&gt;Protection from Brute Force &amp;amp; Dictionary Attacks.&lt;/li&gt;
  &lt;li&gt;Protection from &lt;a href=&quot;https://en.wikipedia.org/wiki/Rainbow_table&quot;&gt;Rainbow Table&lt;/a&gt; Attacks.&lt;/li&gt;
  &lt;li&gt;Randomly generated salt for every password.&lt;/li&gt;
  &lt;li&gt;Extra field is not required for storing salt in the database.&lt;/li&gt;
  &lt;li&gt;Uses &lt;a href=&quot;https://en.wikipedia.org/wiki/PBKDF2&quot;&gt;PBKDF2&lt;/a&gt; to compute hash.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can contribute to this library by sending a pull request or opening an issue at : &lt;a href=&quot;https://github.com/vaibhavahuja/secura/&quot;&gt;repo link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks for reading. Hoping you will find this library useful.&lt;/p&gt;
</description>
        <pubDate>Mon, 25 May 2020 05:30:00 +0530</pubDate>
        <link>http://localhost:4000/hash/secura</link>
        <guid isPermaLink="true">http://localhost:4000/hash/secura</guid>
        
        <category>project</category>
        
        <category>javascript</category>
        
        <category>cryptography</category>
        
        
        <category>hash</category>
        
      </item>
    
      <item>
        <title>Educational DP contest</title>
        <description>&lt;p&gt;&lt;strong&gt;PS: This is still WIP.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I will be writing down the solutions (and my approach) of the dynamic programming problems I have solved from the &lt;a href=&quot;https://atcoder.jp/contests/dp&quot;&gt;Atcoder Educational DP Contest&lt;/a&gt;. This post will be used a reference whenever I wish to revise Dynamic Programming.
This contest has 26 problems [A-Z] of varying difficulties. I will be writing the solution for first 12-13 problems and the rest will come in a later post.
I will be writing about the thought I had while identifying the state, what exactly does the DP state signify (meaning of DP &lt;sub&gt;i, j, …&lt;/sub&gt;) and the DP relation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;      &lt;a href=&quot;https://atcoder.jp/contests/dp/tasks/dp_a&quot;&gt;FROG 1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PROBLEM LINK:&lt;/strong&gt; https://atcoder.jp/contests/dp/tasks/dp_a&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SOLUTION&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Identifying the states&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We can see that in reaching from one stone to another, only the stone number changes and we can get the height of any stone number (an array of heights is given), so there will be only one state that is : &lt;strong&gt;stone number&lt;/strong&gt;
cost of &lt;code class=&quot;highlighter-rouge&quot;&gt;|h[i] - h[j]|&lt;/code&gt; is incurred when we jump from i&lt;sup&gt;th&lt;/sup&gt; stone to j&lt;sup&gt;th&lt;/sup&gt; stone&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Meaning of DP state&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here &lt;code class=&quot;highlighter-rouge&quot;&gt;DP[i]&lt;/code&gt; means the minimum cost incurred for the frog to reach i&lt;sup&gt;th&lt;/sup&gt; stone. So since a frog can reach i&lt;sup&gt;th&lt;/sup&gt; stone only from (i-1)&lt;sup&gt;th&lt;/sup&gt; stone and (i-2)&lt;sup&gt;th&lt;/sup&gt; stone the dp relation will be as follow:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;DP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The final answer will be &lt;code class=&quot;highlighter-rouge&quot;&gt;DP[n]&lt;/code&gt; which means the minimum cost incurred to reach n&lt;sup&gt;th&lt;/sup&gt; stone. 
We can also see that since the answer for  &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; is only dependent on &lt;code class=&quot;highlighter-rouge&quot;&gt;(i-1)&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;(i-2)&lt;/code&gt; stone we can do it in constant space.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;B&lt;/strong&gt;      &lt;a href=&quot;https://atcoder.jp/contests/dp/tasks/dp_b&quot;&gt;FROG 2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PROBLEM LINK:&lt;/strong&gt; https://atcoder.jp/contests/dp/tasks/dp_b&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SOLUTION&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Identifying the states&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This problem is similar to previous one however now the frog can jump from any stonein the range &lt;code class=&quot;highlighter-rouge&quot;&gt;[i-1, i-2, i-3,...., i-K]&lt;/code&gt; with the same &lt;code class=&quot;highlighter-rouge&quot;&gt;|h[i]-h[j]|&lt;/code&gt; cost incurred. Again the state will be the &lt;strong&gt;stone number&lt;/strong&gt; since only the stone number matters.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Meaning of DP state&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here &lt;code class=&quot;highlighter-rouge&quot;&gt;DP[i]&lt;/code&gt; means the minimum cost incurred for the frog to reach &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; stone. So since a frog can reach &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; stone from any of these stones : &lt;code class=&quot;highlighter-rouge&quot;&gt;[i-1, i-2, i-3,...., i-K]&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The final answer will be &lt;code class=&quot;highlighter-rouge&quot;&gt;DP[n]&lt;/code&gt; which means the minimum cost incurred to reach &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; stone. The time complexity will be &lt;code class=&quot;highlighter-rouge&quot;&gt;O(n^2)&lt;/code&gt; and the space complexity will be &lt;code class=&quot;highlighter-rouge&quot;&gt;O(n)&lt;/code&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;      &lt;a href=&quot;https://atcoder.jp/contests/dp/tasks/dp_c&quot;&gt;VACATION&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PROBLEM LINK:&lt;/strong&gt; https://atcoder.jp/contests/dp/tasks/dp_c&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SOLUTION&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Identifying the states&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Seeing the problem it is clear that the vacation consists of &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt; days, and we need to find the maximum total points. Also, Taro has some activities out of which he does one on &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; day and does not repeat for two or more consecutive days so the dp states will be &lt;code class=&quot;highlighter-rouge&quot;&gt;days&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;activity performed&lt;/code&gt; (since every activity has different points). Hence we create a DP array of &lt;code class=&quot;highlighter-rouge&quot;&gt;Days * activities&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Meaning of DP state&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DP[i][j]&lt;/code&gt; would mean the maximum number of points on &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; day given that Taro performs &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt; activity. 
We also need to make sure that Taro does not repeat an activity so the solution will be something like below :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;days&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activities&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pointsofactivity_j_on_i_day&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;activities&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//we need to make sure that we do not include j as the previous activity. &lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The final answer will be max of &lt;code class=&quot;highlighter-rouge&quot;&gt;DP[N][j]&lt;/code&gt; where N is total number of days and &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt; are all the activities.&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;D&lt;/strong&gt;      &lt;a href=&quot;https://atcoder.jp/contests/dp/tasks/dp_d&quot;&gt;KNAPSACK 1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PROBLEM LINK:&lt;/strong&gt; https://atcoder.jp/contests/dp/tasks/dp_d&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SOLUTION&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Identifying the states&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Well it is the classical Knapsack and we can see that Taro has to choose some N items and maximum capacity is W. He has to have the maximum value and he only has two choices, either to pick an item and put it in his bag or not to pick the item. So the DP states will be &lt;code class=&quot;highlighter-rouge&quot;&gt;N&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;W&lt;/code&gt; since it only matters the number of items Taro picks up and the total weight in the knapsack.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Meaning of DP state&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here &lt;code class=&quot;highlighter-rouge&quot;&gt;DP[i][j]&lt;/code&gt; would mean the maximum &lt;strong&gt;value&lt;/strong&gt;* we get after choosing (yes or no) the first &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; items and maximum weight as &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt;. We get two options, either take an item or not to take the item.
Hence it will be the maximum of:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Taking the item: &lt;code class=&quot;highlighter-rouge&quot;&gt;val[i] + DP[i-1][j-wt[i]]&lt;/code&gt; (weight empty reduces)&lt;/li&gt;
  &lt;li&gt;Not taking item : &lt;code class=&quot;highlighter-rouge&quot;&gt;DP[i-1][j]&lt;/code&gt; (weight empty is still the same)&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;DP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// (need to make sure that wt[i] &amp;lt;= j)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The final answer will be &lt;code class=&quot;highlighter-rouge&quot;&gt;DP[N][W]&lt;/code&gt; which means the maximum value with all the N items seen and maximum weight as W.&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;E&lt;/strong&gt;      &lt;a href=&quot;https://atcoder.jp/contests/dp/tasks/dp_e&quot;&gt;KNAPSACK 2&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PROBLEM LINK:&lt;/strong&gt; https://atcoder.jp/contests/dp/tasks/dp_e&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SOLUTION&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Identifying the states&lt;/em&gt; 
This problem is just the same as the previous problem with a few changes. The limits have been changed. 
Now,&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1 ≤ N ≤ 100
1 ≤ W ≤ 10^9
1 ≤ w[i] ≤ W 
1 ≤ v[i] ≤ 10^3
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can see that the value of W we used in the previous problem is &lt;code class=&quot;highlighter-rouge&quot;&gt;1e9&lt;/code&gt; which is too large for us to make it as a DP state, hence we will change the DP state from W to &lt;code class=&quot;highlighter-rouge&quot;&gt;V&lt;/code&gt; where &lt;code class=&quot;highlighter-rouge&quot;&gt;V&lt;/code&gt; means the maximum value (which can be just 1e3).&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Meaning of DP state&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Since we changed the state the meaning of DP state changes as well. 
Now, &lt;code class=&quot;highlighter-rouge&quot;&gt;DP[i][j]&lt;/code&gt; is the minimum weight we can use to make maxValue as &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt; and by using &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; items (again choosing or not choosing is a choice).&lt;/p&gt;

&lt;p&gt;Just like the previous problem, we will either take the item or not take it.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Taking the item: &lt;code class=&quot;highlighter-rouge&quot;&gt;wt[i] + DP[i-1][j-val[i]]&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Not taking item : &lt;code class=&quot;highlighter-rouge&quot;&gt;DP[i-1][j]&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;V&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  		&lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
  		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;// (need to make sure that val[i] &amp;lt;= j)&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// (it is minimum since we want the min weight)&lt;/span&gt;
  	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The final answer will be the maximum &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt; in the &lt;code class=&quot;highlighter-rouge&quot;&gt;DP[N][j]&lt;/code&gt; for which we got the &lt;code class=&quot;highlighter-rouge&quot;&gt;DP[N][j] &amp;lt; W&lt;/code&gt;.&lt;/p&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;F&lt;/strong&gt;      &lt;a href=&quot;https://atcoder.jp/contests/dp/tasks/dp_f&quot;&gt;LCS&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PROBLEM LINK:&lt;/strong&gt; https://atcoder.jp/contests/dp/tasks/dp_f&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SOLUTION&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Identifying the states&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Finding the longest common subsequence is a very well known problem for dynamic programming. We are given two strings &lt;code class=&quot;highlighter-rouge&quot;&gt;s&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;t&lt;/code&gt; and we need to find the longest string that is subsequence to both s and t.
Ofcourse, we will have an option to either include &lt;code class=&quot;highlighter-rouge&quot;&gt;s[i]&lt;/code&gt; or not and similar case with &lt;code class=&quot;highlighter-rouge&quot;&gt;t[j]&lt;/code&gt;
Hence the two states will be &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Meaning of DP state&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;DP[i][j]&lt;/code&gt; would indicate length of longest subsequence with first &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; characters of &lt;code class=&quot;highlighter-rouge&quot;&gt;s&lt;/code&gt; and first &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt; characters of &lt;code class=&quot;highlighter-rouge&quot;&gt;t&lt;/code&gt;. We first construct the DP array which would signify length of longest subsequence and then we trace back to get the actual string.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//tracing back the same we constructed the max array&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]){&lt;/span&gt;
  		&lt;span class=&quot;n&quot;&gt;ans&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  		&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  		&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;G&lt;/strong&gt;      &lt;a href=&quot;https://atcoder.jp/contests/dp/tasks/dp_g&quot;&gt;LONGEST PATH&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PROBLEM LINK:&lt;/strong&gt; https://atcoder.jp/contests/dp/tasks/dp_g&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SOLUTION&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Identifying the states&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So we are given a DAG (directed acyclic graph) and we need to find the length of longest directed path in G. Let us understand the problem more with an example.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/dp1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can see that the length of longest directed path is 3 in the above example.&lt;/p&gt;

&lt;p&gt;In a DAG the first thing that comes to the mind is DFS, and this problem can easily be solved with DFS. 
Here the only state is &lt;em&gt;node number&lt;/em&gt; since we only need to calculate that.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Meaning of DP state&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DP[a]&lt;/code&gt; would mean the length of longest directed path which starts at node &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;. We will just use normal DFS but keep on updating the DP array accordingly.
The dfs function will look like this :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;dfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;allNeighbours&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;visited&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dfs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//since we can reach that node through a; &lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//we take the maxi&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;H&lt;/strong&gt;      &lt;a href=&quot;https://atcoder.jp/contests/dp/tasks/dp_h&quot;&gt;GRID 1&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PROBLEM LINK:&lt;/strong&gt; https://atcoder.jp/contests/dp/tasks/dp_h&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SOLUTION&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Identifying the states&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In this problem we need to calculate number of paths in going from &lt;code class=&quot;highlighter-rouge&quot;&gt;(1, 1)&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;(H, W)&lt;/code&gt; and we can only go if the the square is empty (has a &lt;code class=&quot;highlighter-rouge&quot;&gt;.&lt;/code&gt;) and we cannot pass if there is a wall (&lt;code class=&quot;highlighter-rouge&quot;&gt;#&lt;/code&gt;). Also Taro can go only &lt;strong&gt;Down or Right&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The states will be clearly &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;j&lt;/code&gt; which denote the length and width of a column.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Meaning of DP state&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here &lt;code class=&quot;highlighter-rouge&quot;&gt;DP[i][j]&lt;/code&gt; would denote the number of paths from &lt;code class=&quot;highlighter-rouge&quot;&gt;(1, 1)&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;(i, j)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We can see in the below image how we are making our dp array. to reach every (i, j) the number of options are (i, j-1) + (i-1, j).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../images/dp2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//dp[1][i] and dp[i][1] will be 1 as long as dp[1][i-1] and dp[i-1][1] are . (empty spaces). &lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blank&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;space&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The final answer will be ofcourse &lt;code class=&quot;highlighter-rouge&quot;&gt;DP[n][m]&lt;/code&gt; which means the number of ways to reach &lt;code class=&quot;highlighter-rouge&quot;&gt;n&lt;/code&gt; row and &lt;code class=&quot;highlighter-rouge&quot;&gt;m&lt;/code&gt; column.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;PS: I am still writing this post and it is work in progress 🚧&lt;/p&gt;

&lt;!-- 
**I**  &amp;nbsp;   [COINS](https://atcoder.jp/contests/dp/tasks/dp_i)


**PROBLEM LINK:** https://atcoder.jp/contests/dp/tasks/dp_i

**SOLUTION**

**Incomplete So Far**

*Identifying the states* 

We are given N coins, which are tossed. The coins are biased tho. The probability of getting heads when coin `i` is tossed is `p[i]` which would mean of getting tails is `1 - p[i]`. Also N is odd so both heads and tails cant come equal number of times. We need to find the probability of having more heads than tails. 
Let us see what really matters in the problem: Since we need to find the proability of getting more heads than tails, the number of heads matter and the probability of getting heads or tails matter, and total number of coin tosses matter but since we can get the `P[head] or P[tails]` we only need two states : number of heads &amp; number of coin tosses. 


*Meaning of DP state*

`DP[i][j]` would mean the probability of getting `j` heads in `i` coin tosses.
We can understand more by trying to make the DP table. --&gt;

&lt;!-- 
&lt;hr/&gt; --&gt;
</description>
        <pubDate>Thu, 07 May 2020 05:30:00 +0530</pubDate>
        <link>http://localhost:4000/codes/atcoder-dp</link>
        <guid isPermaLink="true">http://localhost:4000/codes/atcoder-dp</guid>
        
        <category>dp</category>
        
        <category>codes</category>
        
        <category>wip</category>
        
        <category>algo</category>
        
        
        <category>codes</category>
        
      </item>
    
      <item>
        <title>List of div2C Problems</title>
        <description>&lt;p&gt;Below is a list of problems I will be solving during this February - April’20. It consists of 100 problems, all of which are Div2C, of codeforces. I will try to write the explanation of each problem, based on my understanding, and how I approached the solution. I am starting this on - 13 February 2020.&lt;/p&gt;

&lt;table&gt;
	&lt;tr&gt;
		&lt;th style=&quot;width:10%;&quot;&gt;ID&lt;/th&gt;
		&lt;th style=&quot;width:45%;&quot;&gt;Problem Name&lt;/th&gt;
		&lt;th style=&quot;width:15%; &quot;&gt;Difficulty Level&lt;/th&gt;
		&lt;th style=&quot;width:30%;&quot;&gt;Status&lt;/th&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;1&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/489/C&quot; target=&quot;_blank&quot;&gt;Given Length and Sum of Digits...&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;1&lt;/td&gt;
		&lt;td&gt;Accepted | 13th Feb'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;2&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/466/C&quot; target=&quot;_blank&quot;&gt;Number of Ways&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 13th Feb'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;3&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/401/C&quot; target=&quot;_blank&quot;&gt;Team&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 13th Feb'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/479/C&quot; target=&quot;_blank&quot;&gt;Exams&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 14th Feb'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #FCF4A3;&quot;&gt;
		&lt;td&gt;5&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/455/A&quot; target=&quot;_blank&quot;&gt;Boredom&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt; to do &lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;6&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/478/C&quot; target=&quot;_blank&quot;&gt;Table Decorations&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 14th Feb'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;7&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/268/C&quot; target=&quot;_blank&quot;&gt;Beautiful Sets of Points&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 18th Feb'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #FCF4A3;&quot;&gt;
		&lt;td&gt;8&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/431/C&quot; target=&quot;_blank&quot;&gt;k-Tree&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;to do&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;9&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/441/C&quot; target=&quot;_blank&quot;&gt;Valera and Tubes &lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 18th Feb'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;10&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/486/C&quot; target=&quot;_blank&quot;&gt;Palindrome Transformation&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 18th Feb'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;11&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/363/C&quot; target=&quot;_blank&quot;&gt;Fixing Typos&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 21st Feb'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;12&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/490/C&quot; target=&quot;_blank&quot;&gt;Hacking Cypher&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;2&lt;/td&gt;
		&lt;td&gt;Accepted | 21st Feb'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #FCF4A3;&quot;&gt;
		&lt;td&gt;13&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/463/C&quot; target=&quot;_blank&quot;&gt;Gargari and Bishops&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;5&lt;/td&gt;
		&lt;td&gt;to do&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;14&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/152/C&quot; target=&quot;_blank&quot;&gt;Pocket Book&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 21st Feb'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;15&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/109/A&quot; target=&quot;_blank&quot;&gt;Lucky Sum of Digits&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;3&lt;/td&gt;
		&lt;td&gt;Accepted | 21st Feb'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;16&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/382/C&quot; target=&quot;_blank&quot;&gt;Arithmetic Progression&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 24th Feb'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;17&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/388/A&quot; target=&quot;_blank&quot;&gt;Fox and Box Accumulation&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;3&lt;/td&gt;
		&lt;td&gt;Accepted | 24th Feb'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;18&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/9/C&quot; target=&quot;_blank&quot;&gt;Hexadecimal's Numbers&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;2&lt;/td&gt;
		&lt;td&gt;Accepted | 24th Feb'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #FCF4A3;&quot;&gt;
		&lt;td&gt;19&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/339/C&quot; target=&quot;_blank&quot;&gt;Xenia and Weights&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;to do&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;20&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/350/C&quot; target=&quot;_blank&quot;&gt;Bombs&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 26th Feb'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #FCF4A3;&quot;&gt;
		&lt;td&gt;21&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/459/C&quot; target=&quot;_blank&quot;&gt;Pashmak and Buses&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;5&lt;/td&gt;
		&lt;td&gt;to do&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;22&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/220/A&quot; target=&quot;_blank&quot;&gt;Little Elephant and Problem&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 25th Feb'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;23&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/377/A&quot; target=&quot;_blank&quot;&gt;Maze&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 4th Mar'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;24&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/217/A&quot; target=&quot;_blank&quot;&gt;Ice Skating&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;3&lt;/td&gt;
		&lt;td&gt;Accepted | 4th Mar'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;25&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/371/C&quot; target=&quot;_blank&quot;&gt;Hamburgers&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 5th Mar'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #FCF4A3;&quot;&gt;
		&lt;td&gt;26&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/385/C&quot; target=&quot;_blank&quot;&gt;Bear and Prime Numbers&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;5&lt;/td&gt;
		&lt;td&gt;Getting TLE idk why | 8th Mar'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;27&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/137/C&quot; target=&quot;_blank&quot;&gt;History&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 8th Mar'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;28&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/427/C&quot; target=&quot;_blank&quot;&gt;Checkposts&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 8th Mar'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;29&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/414/A&quot; target=&quot;_blank&quot;&gt;Mashmokh and Numbers&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;3&lt;/td&gt;
		&lt;td&gt;Accepted | 10th Mar'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #FCF4A3;&quot;&gt;
		&lt;td&gt;30&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/279/C&quot; target=&quot;_blank&quot;&gt;Ladder&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;DP - will do later&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;31&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/264/A&quot; target=&quot;_blank&quot;&gt;Escape from Stones&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;3&lt;/td&gt;
		&lt;td&gt;Accepted | 10th Mar'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;32&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/149/C&quot; target=&quot;_blank&quot;&gt;Division into Teams&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 11th Mar'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #FCF4A3;&quot;&gt;
		&lt;td&gt;33&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/225/C&quot; target=&quot;_blank&quot;&gt;Barcode&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;High time, really need to start dp.&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;34&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/18/C&quot; target=&quot;_blank&quot;&gt;Stripe&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;3&lt;/td&gt;
		&lt;td&gt;Accepted | 11th Mar'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;35&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/348/A&quot; target=&quot;_blank&quot;&gt;Mafia&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 12th Mar'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #FCF4A3;&quot;&gt;
		&lt;td&gt;36&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/283/A&quot; target=&quot;_blank&quot;&gt;Cows and Sequence&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt; getting WA; to do | 12th Mar'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;37&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/231/C&quot; target=&quot;_blank&quot;&gt;To Add or Not to Add&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 18th Mar'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #FCF4A3;&quot;&gt;
		&lt;td&gt;38&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/429/A&quot; target=&quot;_blank&quot;&gt;Xor-tree&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;3&lt;/td&gt;
		&lt;td&gt;to do&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;39&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/235/A&quot; target=&quot;_blank&quot;&gt;LCM Challenge&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted | 18th Mar'20&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;40&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/343/A&quot; target=&quot;_blank&quot;&gt;Rational Resistance&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;41&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/251/A&quot; target=&quot;_blank&quot;&gt;Points on Line&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;3&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #FCF4A3;&quot;&gt;
		&lt;td&gt;42&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/464/A&quot; target=&quot;_blank&quot;&gt;No to Palindromes!&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;to do\&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #FCF4A3;&quot;&gt;
		&lt;td&gt;43&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/424/C&quot; target=&quot;_blank&quot;&gt;To do&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;to do&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;44&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/300/C&quot; target=&quot;_blank&quot;&gt;Beautiful Numbers&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;45&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/337/C&quot; target=&quot;_blank&quot;&gt;Quiz&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;46&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/135/A&quot; target=&quot;_blank&quot;&gt;Replacement&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;3&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #FCF4A3;&quot;&gt;
		&lt;td&gt;47&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/354/A&quot; target=&quot;_blank&quot;&gt;Vasya and Robot&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;to do&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;48&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/474/C&quot; target=&quot;_blank&quot;&gt;Captain Marmot&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;49&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/150/A&quot; target=&quot;_blank&quot;&gt;Win or Freeze&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #FCF4A3;&quot;&gt;
		&lt;td&gt;50&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/364/A&quot; target=&quot;_blank&quot;&gt;Matrix&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;to do&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;51&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/53/C&quot; target=&quot;_blank&quot;&gt;Little Frog&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;2&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;52&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/121/A&quot; target=&quot;_blank&quot;&gt;Lucky Sum&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;3&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;53&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/487/A&quot; target=&quot;_blank&quot;&gt;Fight the Monster&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;54&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/407/A&quot; target=&quot;_blank&quot;&gt;Triangle&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;55&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/257/C&quot; target=&quot;_blank&quot;&gt;View Angle&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;56&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/242/C&quot; target=&quot;_blank&quot;&gt;King's Path&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;57&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/71/C&quot; target=&quot;_blank&quot;&gt;Round Table Knights&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;58&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/329/A&quot; target=&quot;_blank&quot;&gt;Purification&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;59&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/261/A&quot; target=&quot;_blank&quot;&gt;Maxim and Discounts&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;3&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;60&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/311/A&quot; target=&quot;_blank&quot;&gt;The Closest Pair&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;3&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;61&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/375/A&quot; target=&quot;_blank&quot;&gt;Divisible by Seven&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;62&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/154/A&quot; target=&quot;_blank&quot;&gt;Hometask&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;63&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/204/A&quot; target=&quot;_blank&quot;&gt;Little Elephant and Interval&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #FCF4A3;&quot;&gt;
		&lt;td&gt;64&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/107/A&quot; target=&quot;_blank&quot;&gt;Dorm Water Supply&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;3&lt;/td&gt;
		&lt;td&gt;to do&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #FCF4A3;&quot;&gt;
		&lt;td&gt;65&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/294/C&quot; target=&quot;_blank&quot;&gt;Shaass and Lights&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;5&lt;/td&gt;
		&lt;td&gt;to do&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;66&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/359/C&quot; target=&quot;_blank&quot;&gt;Prime Number&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;5&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #FCF4A3;&quot;&gt;
		&lt;td&gt;67&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/243/A&quot; target=&quot;_blank&quot;&gt;The Brand New Function&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;to do&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;68&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/198/A&quot; target=&quot;_blank&quot;&gt;About Bacteria&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #FCF4A3;&quot;&gt;
		&lt;td&gt;69&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/319/A&quot; target=&quot;_blank&quot;&gt;Malek Dance Club&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;to do&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #FCF4A3;&quot;&gt;
		&lt;td&gt;70&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/358/C&quot; target=&quot;_blank&quot;&gt;Dima and Containers&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;5&lt;/td&gt;
		&lt;td&gt;to do :/&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: #d5e9dd;&quot;&gt;
		&lt;td&gt;71&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/87/A&quot; target=&quot;_blank&quot;&gt;Trains&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;Accepted&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;72&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/255/C&quot; target=&quot;_blank&quot;&gt;Almost Arithmetical Progression&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;73&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/91/A&quot; target=&quot;_blank&quot;&gt;Newspaper Headline&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;74&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/374/C&quot; target=&quot;_blank&quot;&gt;Inna and Dima&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;75&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/216/C&quot; target=&quot;_blank&quot;&gt;Hiring Staff&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;5&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;76&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/190/C&quot; target=&quot;_blank&quot;&gt;STL&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;77&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/123/A&quot; target=&quot;_blank&quot;&gt;Prime Permutation&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;78&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/14/C&quot; target=&quot;_blank&quot;&gt;Four Segments&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;5&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;79&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/35/C&quot; target=&quot;_blank&quot;&gt;Fire Again&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;80&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/266/C&quot; target=&quot;_blank&quot;&gt;Below the Diagonal&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;6&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;81&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/29/C&quot; target=&quot;_blank&quot;&gt;Mail Stamps&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;82&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/113/A&quot; target=&quot;_blank&quot;&gt;Grammar Lessons&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;83&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/223/A&quot; target=&quot;_blank&quot;&gt;Bracket Sequence&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;84&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/77/A&quot; target=&quot;_blank&quot;&gt;Heroes&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;85&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/138/A&quot; target=&quot;_blank&quot;&gt;Literature Lesson&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;86&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/222/C&quot; target=&quot;_blank&quot;&gt;Reducing Fractions&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;5&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;87&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/213/A&quot; target=&quot;_blank&quot;&gt;Game&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;88&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/193/A&quot; target=&quot;_blank&quot;&gt;Cutting Figure&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;89&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/58/C&quot; target=&quot;_blank&quot;&gt;Trees&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;90&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/95/A&quot; target=&quot;_blank&quot;&gt;Hockey&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;91&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/31/C&quot; target=&quot;_blank&quot;&gt;Schedule&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;92&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/280/A&quot; target=&quot;_blank&quot;&gt;Rectangle Puzzle&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;5&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;93&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/49/C&quot; target=&quot;_blank&quot;&gt;Disposition&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;94&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/32/C&quot; target=&quot;_blank&quot;&gt;Flea&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;95&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/98/A&quot; target=&quot;_blank&quot;&gt;Help Victoria the Wise&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;96&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/56/C&quot; target=&quot;_blank&quot;&gt;Corporation Mail&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;4&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;97&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/182/C&quot; target=&quot;_blank&quot;&gt;Optimal Sum&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;5&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;98&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/396/A&quot; target=&quot;_blank&quot;&gt;On Number of Decompositions into Multipliers&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;7&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;99&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/392/A&quot; target=&quot;_blank&quot;&gt;Blocked Points&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;7&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
	&lt;tr style=&quot;background-color: white;&quot;&gt;
		&lt;td&gt;100&lt;/td&gt;
		&lt;td&gt;&lt;a href=&quot;http://codeforces.com/problemset/problem/47/C&quot; target=&quot;_blank&quot;&gt;Crossword&lt;/a&gt;&lt;/td&gt;
		&lt;td&gt;5&lt;/td&gt;
		&lt;td&gt;NA&lt;/td&gt;
	&lt;/tr&gt;
&lt;/table&gt;
</description>
        <pubDate>Thu, 13 Feb 2020 05:30:00 +0530</pubDate>
        <link>http://localhost:4000/codes/practice-list-1</link>
        <guid isPermaLink="true">http://localhost:4000/codes/practice-list-1</guid>
        
        <category>div2C</category>
        
        <category>codes</category>
        
        
        <category>codes</category>
        
      </item>
    
      <item>
        <title>Cryptocurrency explained</title>
        <description>&lt;!-- # cryptocurrency explained.  --&gt;

&lt;p&gt;Over the past few days I have been going through various blogs, research papers, youtube videos, books to read and gain knowledge about Cryptocurrency, which has been a pretty talked about topic recently. Unless you have been living under a rock, it is highly unlikely that you have never heard of &lt;em&gt;(bitcoin, blockchain, ethereum, mining)&lt;/em&gt; before. Through this post, I will try to explain how these technologies/currencies work and why were they created, and how can they change the way we do transactions now.&lt;/p&gt;

&lt;p&gt;To understand this Digital Currency, let us understand, how currency works and has been working so far. 
Initially, we had &lt;a href=&quot;https://en.wikipedia.org/wiki/Barter&quot;&gt;barter&lt;/a&gt; system, which was replaced by money mainly because exchange is not always convenient and efficient. 
Due to this, currency started to mint. The exchange problems were solved and this system was largely based on trust. The kings used to have their &lt;a href=&quot;https://en.wikipedia.org/wiki/Alyattes_of_Lydia&quot;&gt;royal seal&lt;/a&gt; on the coin signifying that this currency is valid. However forgery was very common as making a coin and copying the seal was not that a difficult task, but still way much better than Barter. 
With time, the gold coins transformed into paper money, which was widely circulated across the world by &lt;a href=&quot;https://en.wikisource.org/wiki/The_Travels_of_Marco_Polo/Book_2/Chapter_24&quot;&gt;explorers&lt;/a&gt;. Trade flourished across countries through this paper money, and exchange of currency started around that time too, and by around 1860, Western Union, spearheaded e-money with electronic func transfer via telegram. With time cards came, and with the rise of internet the e-money started to boom. 
The reason, why I am focussing on the history of currency, is because I want you to understand what is common between all these systems of currency. From exchanging coins with royal seals, to exchanging paper currency, with issuance from bank/government, to starting e-money (banks giving cards). If you try to find the pattern, you will see that all of these currencies are &lt;strong&gt;Centralized&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;By centralized, what I mean is that everytime there is an authority that is responsible for issuing the currency. Someone who says that, Yes, I am accountable for this currency and this currency is valid. Be it a king, who imprints the coin with its royal seal, or the government. The transactions have always been based on &lt;strong&gt;Trust&lt;/strong&gt;. If I pay ₹100 to X, the bank issuing the currency is responsible to pay that ₹100 to X. Hence the currency so far being used is based on Trust, and is Centralized. Due to this we are always bound to law, cannot be innovative and creative with our money, always under control and at a risk of interference. Also, the banks would charge some amount for transactions as &lt;em&gt;transaction fee&lt;/em&gt;. The point to be noted is that, crypto currency is not flawless, so it just provides as an alternative currency as of now. Due to all this, a currency was needed which was not based on trust, and is not centralized.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Cryptocurrency is a decentralized trustless verification system + Math.&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, one thing I would like to mention here is that just like normal currency, you need not know how cryptocurrency is made or how it works to use it. Diving into the technical details, let us understand everything with an example.&lt;/p&gt;

&lt;p&gt;Say there are 4 friends A, B, C and D who hang out pretty often, and hence they need a system to keep track of money. What they do is, they keep a ledger and add all the transactions in it. At the end of the month they take all the transactions and then total it up and settle it and pay accordingly.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* ledger *
A gives B 200 rupees
B gives C 500 rupees
C gives A 1000 rupees
D gives B 300 rupees
..............and so on
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The catch here is that the ledger is accessible to all four of them, i.e anyone can add or delete the transactions. D might just add that, &lt;code class=&quot;highlighter-rouge&quot;&gt;C gives D 500 rupees&lt;/code&gt;, as there is no one stopping D. He can keep on adding fraudulent transactions until someone catches him, and resolve this. So, what we need is a system to verify that the correct person is writing the ledger. The solution to this is &lt;em&gt;Digital Signatures&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Before I start with explaining what Digital Signatures are, I would like to mention Cryptographic Hashing. Hashing is a method that converts any form of data in a unique string of text. Typically the output of every hash function is a fixed length of string. Now what cryptographic hash functions are, are hash functions which cannot be reversed. 
So cryptographic hash functions will take any input, no matter how big or small, and output a fixed length of string which is irreversible. It is practically impossible to determine what input caused that hash except hit and trial. Now coming to digital signatures, these are used to verify the identity of the person signing a message. Through digital signatures we can be sure that the person signing the message is actually the person writing the message. It mainly consists of &lt;em&gt;private key and public key.&lt;/em&gt; Private key can be thought of your PIN card and public key as your A/C number. You keep the private key with yourself, but can give everyone your public key. Now to make a transaction, you write a message and encrypt that with your private key. And you send the hash message to the receiver. The receiver would see the hashed message, and verify if it was sent by you using the public key. The cryptographic hash function used is mainly SHA-256. The bit string generated is 256 digits long, i.e there can be 2&lt;sup&gt;256&lt;/sup&gt; combinations. 2 &lt;sup&gt;256&lt;/sup&gt; is an extremely large large number.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/bitcoin2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The functions would look something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dig_sign(message, private key) -&amp;gt; signature

verify(message, signature, public key) -&amp;gt; true/false

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that you have a fair idea of how digital signatures work, we can go back to the example. D can no longer write any fraudulent transactions in the ledger as they all will be from now on digitally signed. The verification system apart from checking if the message was signed from the trusted party or not, it also checks if the party sending the money actually has it or not.&lt;/p&gt;

&lt;p&gt;The problem with this solution is that the fate of the entire money system depends on the company running the mint, with every transaction having to go through them, just like a bank. We need a way for the payee to know that the previous owners did not sign any earlier transactions.&lt;/p&gt;

&lt;p&gt;One thing which you might have noticed, is that this system of ledger that I just explained is centralized as well, which I had focussed on earlier. We have found a way to secure the transactions but there is only one ledger, and everyone is making transactions in their own ledger. As I had mentioned earlier, the cryptocurrency is decentralized. To make this currency decentralized, we will give one copy of the ledger to all four friends (A B C and D). Now this ledger becomes a decentralized currency.&lt;/p&gt;

&lt;p&gt;So now, all have personal copies of the ledger, and now adding the transaction has become a different process. Like they can still add the transaction in their personal ledger, but it wont match with the ledger of someone else. Say, B adds &lt;code class=&quot;highlighter-rouge&quot;&gt;B gave ₹5000 to C&lt;/code&gt; to his ledger, but that information wont be added on the ledger of A or C or D. To have all the ledgers on the same track, one must broadcast their ledger so that everyone in the network updates their ledgers with the most recent transactions. So, B would update its ledger, and then broadcast his ledger so that everyone verifies the transaction and update their ledgers as well. Hence through this example, we have made a trustless decentralized verification system.&lt;/p&gt;

&lt;p&gt;A big problem with this system is that, what if D broadcasts that he has sent 500 rupees to A, and at the same time, it broadcasts that he has sent 500 rupees to B. This is how D can double spend his money. This problem has been address in the original &lt;a href=&quot;https://bitcoin.org/bitcoin.pdf&quot;&gt;Bitcoin Paper&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The bitcoin paper mainly said to trust the block/ledger with the most computational work being done &lt;em&gt;(proof of work)&lt;/em&gt;. This ledger is mainly the blockchain. The below diagram will help you understand the chain structure of the ledger.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/bitcoin1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The proof of work involves scanning for a value that when hashed, such as with SHA-256 the hash begins with a number of &lt;code class=&quot;highlighter-rouge&quot;&gt;n zero bits&lt;/code&gt;. 
For our network, we implement the proof of work by incrementing a nonce in the block until a value is found that gives the blocks hash the required zero bits. Finding this number is called &lt;em&gt;mining&lt;/em&gt;, and the people who do this are called &lt;em&gt;miners&lt;/em&gt;. The paper also said to trust that chain with the most number of nodes, hence while updating their ledger, they also keep track of all other chains, and then eliminate the smaller chains as miners start working on the longest chain. 
Proof-of-work is essentially one-CPU-one-vote. The majority decision is represented by the longest chain, which has the greatest proof-of-work effort invested in it. If a majority of CPU power is controlled by honest nodes, the honest chain will grow the fastest and outpace any competing chains. To modify a past block, an attacker would have to redo the proof-of-work of the block and all blocks after it and then catch up with and surpass the work of the honest nodes the number of zeros vary a lot. What the miner gets in return is a block reward. With every block added to the network, the total amount of money increases in the economy, as there is no one issuing the block reward. Hence through this proof of work, it is nearly impossible to create fraudulent transactions. This miniature lottery is such that there is one winner every 10 minutes (in case of  bitcoin). This time may change for other cryptocurrencies.&lt;/p&gt;

&lt;p&gt;We can understand the whole network through these steps&lt;/p&gt;

&lt;p&gt;The steps to run the network are as follows:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;New transactions are broadcast to all nodes.&lt;/li&gt;
  &lt;li&gt;Each node collects new transactions into a block.&lt;/li&gt;
  &lt;li&gt;Each node works on finding a difficult proof-of-work for its block.&lt;/li&gt;
  &lt;li&gt;When a node finds a proof-of-work, it broadcasts the block to all nodes.&lt;/li&gt;
  &lt;li&gt;Nodes accept the block only if all transactions in it are valid and not already spent.&lt;/li&gt;
  &lt;li&gt;Nodes express their acceptance of the block by working on creating the next block in the chain, using the hash of the accepted block as the previous hash. Nodes always consider the longest chain to be the correct one and will keep working on extending it. If two nodes broadcast different versions of the next block simultaneously, some nodes may receive one or the other first. In that case, they work on the first one they received, but save the other branch in case it becomes longer. The tie will be broken when the next proof of work is found and one branch becomes longer; the nodes that were working on the other branch will then switch to the longer one.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Through this post, I hope you have a fair idea of how cryptocurrencies work.&lt;/p&gt;
</description>
        <pubDate>Sat, 05 Oct 2019 18:01:19 +0530</pubDate>
        <link>http://localhost:4000/blockchain/understanding-bitcoin</link>
        <guid isPermaLink="true">http://localhost:4000/blockchain/understanding-bitcoin</guid>
        
        <category>Blockchain</category>
        
        
        <category>blockchain</category>
        
      </item>
    
      <item>
        <title>The P10 Display.</title>
        <description>&lt;p&gt;In this post, we will be seeing on how can we use the STM8s microcontroller to drive the Chinese dot matrix display. In this process we will be understanding how exactly does the display work &lt;em&gt;(the schematics and work flow)&lt;/em&gt;, and further will be interfacing the display with the &lt;a href=&quot;https://www.st.com/en/evaluation-tools/stm8s-discovery.html&quot;&gt;STM8s Discovery Board&lt;/a&gt; (&lt;em&gt;both the code and hardware will be discussed&lt;/em&gt;.) Once we understand how the display works, writing the code should be a piece of cake then.&lt;/p&gt;

&lt;h3 id=&quot;what-is-the-p10-display&quot;&gt;What is the P10 display?&lt;/h3&gt;

&lt;p&gt;The P10 display is an LED Panel, a very cheap one, &lt;strong&gt;32X16&lt;/strong&gt; i.e has 32 LED’s in horizontal and 16 in vertical (one panel). The 10 in P10 stands for the pixel distance that is 10mm. It is widely used in advertising and to grab attention in local markets. You must have seen a variant of P10 display on the Buses in Delhi (image below). This one has a much bigger pixel distance something around 13-15mm so these might be P13 or P15 displays but the working concept is the same. Further, we can cascade more and more LED panels to get a bigger panel.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;img src=&quot;/images/p15.png?raw=true&quot; alt=&quot;p15&quot; /&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The thing about these Chinese displays are that they come with absolutely 0 documentation. I tried searching on the web and was able to find a few russian blogs but it did not help much. These displays are based on an undocumented protocol (hub12). The Chinese don’t want anyone to replicate their extreme low cost design and remove their monopoly in this market so they dont provide any reference to understand their products. However, this not being a very complex device, it was easy to reverse engineer the display.&lt;/p&gt;

&lt;h3 id=&quot;the-display&quot;&gt;The display&lt;/h3&gt;
&lt;p&gt;The front panel consists of 512 LED’s in a 32*16 matrix. On seeing the backside of the panel we see sixteen &lt;strong&gt;74HC595&lt;/strong&gt;. This is an 8 bit serial-in parallel-out &lt;a href=&quot;https://en.wikipedia.org/wiki/Shift_register&quot;&gt;Shift Register&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;img src=&quot;/images/rearpanel.jpg?raw=true&quot; alt=&quot;rearpanel&quot; /&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Every single 8 bit shift register can be used to control 8 LED’s. So we can control 128 LED’s by the given number of shift registers on one panel but the number of LED’s are 512. How does the display control 512 LED’s when it is just capable of controlling 128 LED’s? Here comes the concept of refresh rate.&lt;/p&gt;

&lt;p&gt;At one instant, the shift registers can only control at a maximum of 128 LED’s so we select which of the 128 LED’s to be controlled by using two extra bits. The rows switch faster than the refresh rate of the human eyes, such that for the human eye it looks static. Think of this as when you take a laser light and move it from one place to another, you see a line of that laser light, but is it actually a light? Its just a dot in real. This is the concept of refresh rate used in this P10 display to smartly reduce the production cost. To understand this concept better, see this image.
It took me an hour or two to figure out how data shifts through the 74HC95. I’d recommend the reader to try this on their own after reading this post. &lt;em&gt;Refer the picture on the right.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;img src=&quot;/images/led_rows.jpg?raw=true&quot; alt=&quot;rearpanel&quot; /&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The white boxes show the LED’s controlled by every shift register. At one instant only one row out of the four can be enabled/controlled by using the A and B control bits as below.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;A&lt;/th&gt;
      &lt;th&gt;B&lt;/th&gt;
      &lt;th&gt;Row&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1,5,9,13&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;2,6,10,14&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;3,7,11,15&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;4,8,12,16&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Now that we know how exactly the display works, we can get started on writing the code and making the hardware connections to display any content on the display. Things will be a lot clear once we write the code and make the connections.&lt;/p&gt;

&lt;h3 id=&quot;the-connections&quot;&gt;The Connections&lt;/h3&gt;

&lt;p&gt;The connections are pretty straight forward. The pin configuration for the display was available online &lt;em&gt;(shown in the image below)&lt;/em&gt; , and as we are communicating through &lt;a href=&quot;https://en.wikipedia.org/wiki/Serial_Peripheral_Interface_Bus&quot;&gt;SPI&lt;/a&gt;, we just need to configure the pins accordingly. Do keep the pin configuration of the STM8s discovery board handy. It is available &lt;a href=&quot;https://www.st.com/content/ccc/resource/technical/document/user_manual/30/f0/2f/7e/96/5a/44/80/CD00250600.pdf/files/CD00250600.pdf/jcr:content/translations/en.CD00250600.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;img src=&quot;/images/connections.png?raw=true&quot; alt=&quot;connections&quot; /&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The connections which I have used are as follows:
&lt;em&gt;Refer the &lt;a href=&quot;https://www.st.com/content/ccc/resource/technical/document/user_manual/30/f0/2f/7e/96/5a/44/80/CD00250600.pdf/files/CD00250600.pdf/jcr:content/translations/en.CD00250600.pdf&quot;&gt;user manual&lt;/a&gt; to understand these connections.&lt;/em&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CN2&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CN1&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CN2&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CN2&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CN2&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CN1&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CN2&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;small&gt;
&lt;em&gt;PS: Don’t forget to connect power supply to the P10 board and the microcontroller.
A 5v, 2A adapter should be sufficient to power the P10 board.
Always power the display board first and then the other microcontroller
otherwise the board might suck power from the microcontroller thus damaging the
controller.&lt;/em&gt;
&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Now that we are done with the connections, lets get started by writing the code to drive the display.&lt;/p&gt;

&lt;h3 id=&quot;the-code&quot;&gt;The Code.&lt;/h3&gt;

&lt;p&gt;To start with, we will need to configure the GPIO’s of the microcontroller. Comments are added so it should be easy to understand the code.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;configurePins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_MODE_OUT_PP_LOW_FAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// PC6 SPI MOSI Pin (CN2/9)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_MODE_IN_FL_NO_IT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;// PC7 SPI MISO Pin&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_MODE_OUT_PP_LOW_FAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// PC5 SPI Clock OUT Pin (CN2/6)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_MODE_OUT_PP_LOW_FAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// PE5 SPI nSEL Pin&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_MODE_OUT_PP_LOW_FAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// Port C2 is used for external EO Output Enable (CN2/3 Discovery Board)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_MODE_OUT_PP_LOW_FAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// Port G0 is used for external A Sel (CN2/11 Discovery Board)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_MODE_OUT_PP_LOW_FAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// Port C4 is used for external B Sel (CN2/5 Discovery Board)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_MODE_OUT_PP_LOW_FAST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// Port A3 is used for SCLK or Strobe (CN1/9 Discovery Board)&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//Deinitialize the SPI Block&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;SPI_DeInit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Initialize SPI in Master mode&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;SPI_Init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPI_FIRSTBIT_LSB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SPI_BAUDRATEPRESCALER_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SPI_MODE_MASTER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SPI_CLOCKPOLARITY_LOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SPI_CLOCKPHASE_1EDGE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SPI_DATADIRECTION_2LINES_FULLDUPLEX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SPI_NSS_SOFT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x07&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;SPI_Cmd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ENABLE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;GPIO_WriteLow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Initially A = 0 Configure P10 to scan first row&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_WriteLow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Initially B = 0 Configure P10 to scan first row&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_WriteLow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Initially EO = 1 Output enable low (Disabled)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_WriteLow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// Initially Strobe = 0 Strobe low&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once we write configure the GPIO pins to do the custom functions as per our connections to the P10 display, we are ready to send data to the display through SPI. The SPI block is configured and initialized as well.&lt;/p&gt;

&lt;p&gt;To send the data through SPI we write another function, which sends an unsigned 8 bit integer through SPI. We also add a delay function, which just counts from a 32bit number to 0 according to the clock speed.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;send_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u8&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;SPI_SendData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//checks for completion of transmission&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPI_GetFlagStatus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SPI_FLAG_TXE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Decrement nCount value&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nCount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;nCount&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, like we saw previously, the display has a scan ratio of 1/4. Hence we need to scan one row at a time. We also saw how to configure the A and B bits to choose the row which we need to display.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;scanRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//A == G0 and B == C4&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;GPIO_WriteLow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_WriteLow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   
  &lt;span class=&quot;n&quot;&gt;GPIO_WriteLow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_WriteHigh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   
  &lt;span class=&quot;n&quot;&gt;GPIO_WriteLow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_WriteLow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   
  &lt;span class=&quot;n&quot;&gt;GPIO_WriteHigh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_WriteHigh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   
  &lt;span class=&quot;n&quot;&gt;GPIO_WriteHigh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We need to have something which we need to display. I wont go into much detail here, and advise the reader to try to understand the code by trying and testing.
Make a digits2 array and enter random 8 bit values(0xFE, 0xFA etc.) to get started. You will understand eventually.&lt;/p&gt;

&lt;p&gt;I am adding a sample digits[2] array which you can modify to test.&lt;/p&gt;

&lt;p&gt;The code is as below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;n&quot;&gt;u8&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;digits2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;mh&quot;&gt;0xe0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xf8&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1c&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x6&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x6&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xff&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xfb&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x73&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x13&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xe3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xc6&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x6&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1c&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xf8&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xe0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1f&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x38&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x60&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x60&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xff&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xdf&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xce&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xc0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xc8&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xc7&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x63&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x60&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x38&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1f&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;mh&quot;&gt;0x0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x80&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x80&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x80&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xc0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xfe&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xfc&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xf8&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xf0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xe0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xf0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x70&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x30&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x18&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7f&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x3f&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1f&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xf&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x7&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xf&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xe&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xc&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x18&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x0&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then, just show each row accordingly. I would recommend the reader to play around these values in digits2[] and see how the display changes. It will help the reader greatly in order to understand the exact functioning of the board.&lt;/p&gt;

&lt;p&gt;One important thing to note is that in the P10 display, the LED burns on &lt;strong&gt;0&lt;/strong&gt; and is off on &lt;strong&gt;1&lt;/strong&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;showRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;scanRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//enable encoder&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;send_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;digits2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;send_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;digits2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_WriteHigh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//A3 pin is for the Strobe or SCLK.&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;GPIO_WriteLow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;GPIO_WriteHigh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPIOC&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO_PIN_2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;//C2 is output enabled&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//we can also add PWM to increase or decrease the brightness. Try this.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Finally our main program would look something like this&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// function prototype declarations&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;configurePins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;uint32_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nCount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;send_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;u8&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;showRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;scanRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//main function&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;CLK_HSIPrescalerConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CLK_PRESCALER_HSIDIV1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;configurePins&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;showRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   
    &lt;span class=&quot;n&quot;&gt;showRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;showRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;showRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So it is quite clear that in this we configure the clock and the pins, and in the infinite loop, we display, the first row, second row, third row and fourth row thus using the concept of Scan Ratio and Refresh Rate.
to see how this works add a delay in between the showRow(i); something like This&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-c--&quot; data-lang=&quot;c++&quot;&gt;&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;showRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;   
  &lt;span class=&quot;n&quot;&gt;Delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;showRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;showRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;showRow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;Delay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You will get an idea how this actually works.&lt;/p&gt;

&lt;p&gt;Hoping by now, you have a fair idea on how to work with the P10 display using the STM8s microcontroller.&lt;/p&gt;

&lt;p&gt;Thanks for reading!&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Jun 2018 18:01:19 +0530</pubDate>
        <link>http://localhost:4000/stm8s/the-chinese-LED-display</link>
        <guid isPermaLink="true">http://localhost:4000/stm8s/the-chinese-LED-display</guid>
        
        <category>iot</category>
        
        
        <category>stm8s</category>
        
      </item>
    
      <item>
        <title>Sarcastic or not? (1/2)</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;Benzema is the best player ever.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is 100% pure sarcasm. Okay, there is no such thing as &lt;em&gt;100% pure sarcasm&lt;/em&gt; but what there is are sarcastic and non sarcastic sentences.
For example, as soon as you read the above statement about Benzema, you could decipher that this is a statement which is definitely not true and is somewhat ironic in a mocking way. Someone who watches football, and has game sense would know that this sentence was a satirical remark. Someone who does not watch football, might think of this statement as &lt;span style=&quot;color: #1eb300;&quot;&gt; True. &lt;/span&gt; Hence we can say, that sarcasm is relative and highly depends on the context.&lt;/p&gt;

&lt;p&gt;Try to understand the complexity of this problem, we as humans, find it really difficult to understand sarcasm, like we can only understand sarcasm once we have an idea about what is the context it is being used in, and the body language, the tone of the voice. If we closely observe someone saying a sarcastic sentence, the pitch of the voice varies. When English speakers remark sarcasm with the word  &lt;em&gt;“Thanks!”&lt;/em&gt;, they often use a nasal tone. The nasal tone shows a connection between sarcasm and extreme disgust. It is like the speaker does not only want to remove the word from the mouth but also from the nose! So so many factors contributing to sarcasm makes it really really difficult to understand sarcasm for us, as humans, let alone computers.&lt;/p&gt;

&lt;p&gt;I took the NLP class this semester at college, which dealt with understanding how Natural Language Processing works and reading and understanding research papers which was something that I was not used to, as bookish knowledge and Youtube was the only source of knowledge so far. TBH it was the most interesting class in this semester compared to my otherwise boring core Electrical Engineering subjects &lt;em&gt;literally very boring, I slept through most of my lectures &lt;del&gt; or maybe it is because of the faculty &lt;/del&gt;&lt;/em&gt; Coming back to the point, I decided to make a project using the Natural Language Processing techniques learnt in this class and the ML algorithms to &lt;span class=&quot;bg-dark-gray white&quot; style=&quot;padding:2 px;&quot;&gt; Detect Sarcasm in Tweets. &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;I basically aimed to create something to solve the complex problem of detecting sarcasm in the tweets. Machines are typically programmed to read the text as it is. It understands anything based strictly on what it is. So, detecting sarcasm was a difficult task. The reason why I chose twitter was because of the abundance of data available for the training of the supervised model. The main motivation behind understanding sarcasm using machines was in order to have a better understanding of one’s data. So that the product reviewing system which scrape the websites can collect better data to analyze their product impact, and so that one can actually understand what the other person is trying to say. As there is no vocabulary defined for sarcasm, it becomes a difficult task, that is something more complicated than a simple classification technique like a &lt;em&gt;Spam Detection ALgorithm&lt;/em&gt; which would simply learn the vocabulary associated with the spam emails and filter them from the rest.&lt;/p&gt;

&lt;p&gt;Sarcasm has been a widely studied topic in linguistics. Due to the advancement in technology and availability of data across the world, Sarcasm Detection has witnessed some great interest from the sentiment analysis community and become an active research area. Basically, what we are trying to achieve can be summed down as follow:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Aiming to implement a model that can detect Sarcasm in Tweets, using NLP and ML techniques.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;methodology&quot;&gt;Methodology&lt;/h3&gt;

&lt;p&gt;The main idea behind understanding sarcasm was that the first part of a sarcastic sentence would have more Positive sentiment as compared to the second part which would be inclined towards more Negative Sentiment. Or we can say that, if (+)ve Sentiment  and (-)ve Sentiment words appear in close proximity, the sentence might be sarcastic.&lt;/p&gt;

&lt;p&gt;Taking an example: &lt;span style=&quot;padding:2 px; color: #595959&quot;&gt; Benzema is the best. &lt;/span&gt; We see that BENZEMA is a negative sentiment&lt;small&gt;(trust me)&lt;/small&gt; and “is the best” positive. Okay, not the best of the examples; so a better example will be something like this &lt;span style=&quot;padding:2 px; color: #595959;&quot;&gt; I am so happy that I failed again. &lt;/span&gt;. If we analyze the statement: positive sentiment will be &lt;em&gt;“happy”&lt;/em&gt; and the word with negative sentiment will be &lt;em&gt;“failed”&lt;/em&gt;. They are in close proximity and hence we might say that this is a sarcastic sentence. We choose this as one of the features &lt;small&gt; (to be discussed later) &lt;/small&gt; and let the classifier decide. This sentiment based approach is the key part of the method. The complete methodology can be somewhat visualized as below:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;img src=&quot;https://i.imgur.com/wlByWoL.png&quot; alt=&quot;method&quot; /&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I will be explaining the implementation part using the above image in detail in the next part &lt;small&gt; will come really soon &lt;/small&gt;. Thanks for reading this.&lt;/p&gt;

&lt;p&gt;Have a good day. :)&lt;/p&gt;
</description>
        <pubDate>Wed, 25 Apr 2018 16:51:29 +0530</pubDate>
        <link>http://localhost:4000/nlp/sarcasm-detection</link>
        <guid isPermaLink="true">http://localhost:4000/nlp/sarcasm-detection</guid>
        
        <category>Machine Learning</category>
        
        <category>project</category>
        
        
        <category>nlp</category>
        
      </item>
    
  </channel>
</rss>
